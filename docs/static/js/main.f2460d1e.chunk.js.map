{"version":3,"sources":["View/Header/index.js","config.js","View/Discover/HeroImage.js","View/Discover/SearchBar.js","View/FourColGrid/index.js","View/MovieThumb/index.js","View/Discover/LoadMoreBtn.js","View/Spinner/index.js","View/Discover/StarRating.js","View/Discover/index.js","View/Movie/Navigation.js","View/Movie/MovieInfo.js","View/Movie/helpers.js","View/Movie/MovieInfoBar.js","View/Movie/index.js","View/NotFound/index.js","App.js","app/store.js","app/serviceWorker.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","process","IMAGE_BASE_URL","HeroImage","movieId","image","title","children","style","background","SearchBar","state","value","timeout","doSearch","event","setState","target","clearTimeout","setTimeout","props","callback","type","placeholder","onChange","this","Component","FourColGrid","header","loading","map","element","i","key","MovieThumb","movieName","clickable","pathname","LoadMoreBtn","onClick","text","Spinner","Star","selected","f","StarRating","totalStars","selectStar","starsSelected","Array","n","Home","rating","movies","heroImage","currentPage","totalPages","searchTerm","star","prevState","searchItems","console","log","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","id","backdrop_path","original_title","filter","movie","vote_average","poster_path","Navigation","MovieInfo","directors","overview","min","max","optimum","low","high","length","name","homepage","href","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","budget","revenue","hours","Math","floor","mins","calcTime","Movie","fetchMovieData","status_code","endpoint_credit","match","params","crew","member","job","localStorage","setItem","JSON","stringify","catch","error","getItem","parse","runtime","NotFound","App","Fragment","path","component","Discover","exact","configureStore","reducer","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","store","document","getElementById","URL","origin","addEventListener","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.f2460d1e.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Header.css\";\n\nconst Header = () => (\n  <div className=\"rmdb-header\">\n    <div className=\"rmdb-header-content\">\n      <Link to=\"/\" className=\"rmdb-logo\">\n        <img\n          src=\"https://img.icons8.com/ultraviolet/40/000000/starred-ticket.png\"\n          alt=\"Movie\"\n        />\n        <span>Discover!</span>\n      </Link>\n    </div>\n  </div>\n);\n\nexport default Header;\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = process.env.REACT_APP_IMDB_API_KEY || '844dba0bfd8f3a4f3799f6130ef9e335';\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL ='http://image.tmdb.org/t/p/';\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = 'w1280';\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = 'w500';\n\nexport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  BACKDROP_SIZE,\n  POSTER_SIZE\n}","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./HeroImage.css\";\n\nconst HeroImage = ({ movieId, image, title, children }) => {\n  return (\n    <div\n      className=\"rmdb-heroimage\"\n      style={{\n        background: `linear-gradient(to bottom, rgba(0,0,0,0)\n      39%, rgba(0,0,0,0)\n      41%, rgba(0,0,0,0.65)\n      100%), url('${image}'), #1c1c1c`,\n      }}\n    >\n      <div className=\"rmdb-heroimage-content\">\n        <div className=\"rmdb-heroimage-text\">\n          <p>Featured today:</p>\n          <Link\n          to={`/${movieId}`}\n        >\n          <h1>{title}</h1>\n        </Link>\n        </div>\n        <div>\n          <p>Don't see your favorite movie? Type the name here:</p>\n          {children}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HeroImage;\n","import React, { Component } from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends Component {\n  state = {\n    value: \"\",\n  };\n\n  timeout = null;\n\n  doSearch = (event) => {\n    this.setState({ value: event.target.value });\n    clearTimeout(this.timeout);\n\n    this.timeout = setTimeout(() => {\n      this.props.callback(this.state.value);\n    }, 500);\n  };\n\n  render() {\n    return (\n      <div className=\"rmdb-searchbar\">\n        <div className=\"rmdb-searchbar-content\">\n          <img\n            src=\"https://img.icons8.com/cotton/50/000000/search--v2.png\"\n            className=\"rmdb-icon-search\"\n            alt=\"search\"\n          />\n          <input\n            type=\"text\"\n            className=\"rmdb-searchbar-input\"\n            placeholder=\"Search for a movie...\"\n            onChange={this.doSearch}\n            value={this.state.value}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./FourColGrid.css\";\n\nconst FourColGrid = props => {\n  const renderElements = () => {\n    const gridElements = props.children.map((element, i) => {\n      return (\n        <div key={i} className=\"rmdb-grid-element\">\n          {element}\n        </div>\n      );\n    });\n    return gridElements;\n  };\n\n  return (\n    <div className=\"rmdb-grid\">\n      {props.header && !props.loading ? props.header : null}\n      <div className=\"rmdb-grid-content\">{renderElements()}</div>\n    </div>\n  );\n};\n\nexport default FourColGrid;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./MovieThumb.css\";\n\nconst MovieThumb = ({image, movieId, movieName, clickable}) => {\n  return (\n    <div className=\"rmdb-moviethumb\">\n      {clickable ? (\n        <Link\n          to={{\n            pathname: `/${movieId}`,\n            movieName: `${movieName}`\n          }}\n        >\n          <img src={image} alt=\"moviethumb\" />\n        </Link>\n      ) : (\n        <img src={image} alt=\"moviethumb\" />\n      )}\n    </div>\n  );\n};\n\nMovieThumb.propTypes = {\n  clickable: PropTypes.bool,\n  image: PropTypes.string,\n  movieId: PropTypes.number,\n  movieName: PropTypes.string\n};\n\nexport default MovieThumb;","import React from \"react\";\nimport \"./LoadMoreBtn.css\";\n\nconst LoadMoreBtn = (props) => {\n  return (\n    <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\n      <p>{props.text}</p>\n    </div>\n  );\n};\n\nexport default LoadMoreBtn;\n","\nimport React from \"react\";\nimport \"./Spinner.css\";\n\nconst Spinner = () => {\n  return <div className=\"loader\" />;\n};\n\nexport default Spinner;","import React from \"react\";\n\nimport \"./StarRating.css\";\n\nconst Star = ({ selected = false, onClick = (f) => f }) => (\n  <div className={selected ? \"star selected\" : \"star\"} onClick={onClick} />\n);\n\nconst StarRating = ({ totalStars, selectStar, starsSelected }) => (\n  <div className=\"star-rating\">\n    <p>Rating:</p>\n    {[...Array(totalStars)].map((n, i) => (\n      <Star\n        key={i}\n        selected={i < starsSelected}\n        onClick={() => selectStar(i + 1)}\n      />\n    ))}\n  </div>\n);\n\nexport default StarRating;\n","import React, { Component } from \"react\";\nimport \"./Discover.css\";\n\nimport {\n  API_URL,\n  API_KEY,\n  IMAGE_BASE_URL,\n  POSTER_SIZE,\n  BACKDROP_SIZE,\n} from \"../../config\";\n\nimport HeroImage from \"./HeroImage\";\nimport SearchBar from \"./SearchBar\";\nimport FourColGrid from \"../FourColGrid\";\nimport MovieThumb from \"../MovieThumb\";\nimport LoadMoreBtn from \"./LoadMoreBtn\";\nimport Spinner from \"../Spinner\";\nimport StarRating from \"./StarRating\";\n\nclass Home extends Component {\n  state = {\n    rating: 10,\n    movies: [],\n    heroImage: null,\n    loading: false,\n    currentPage: 0,\n    totalPages: 0,\n    searchTerm: \"\",\n  };\n\n  componentDidMount() {\n    this.setState({ loading: true });\n    const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}`;\n    this.fetchItems(endpoint);\n  }\n\n  selectStar = (star) => {\n    this.setState((prevState) => ({\n      ...prevState,\n      rating: star * 2,\n    }));\n  };\n\n  searchItems = (searchTerm) => {\n    console.log(searchTerm);\n    let endpoint = \"\";\n    this.setState({\n      movies: [],\n      loading: true,\n      searchTerm,\n    });\n\n    if (searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query=${searchTerm}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  loadMoreItems = () => {\n    let endpoint = \"\";\n    this.setState({\n      loading: true,\n    });\n\n    if (this.state.searchTerm === \"\") {\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&page=${\n        this.state.currentPage + 1\n      }`;\n    } else {\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&query${\n        this.state.searchTerm\n      }$page=${this.state.currentPage + 1}`;\n    }\n    this.fetchItems(endpoint);\n  };\n\n  fetchItems = (endpoint) => {\n    fetch(endpoint)\n      .then((result) => result.json())\n      .then((result) => {\n        this.setState({\n          movies: [...this.state.movies, ...result.results],\n          heroImage: this.state.heroImage || result.results[0],\n          loading: false,\n          currentPage: result.page,\n          totalPages: result.total_pages,\n        });\n      });\n  };\n\n  render() {\n    return (\n      <div className=\"rmdb-home\">\n        {this.state.heroImage ? (\n          <div>\n            <HeroImage\n              movieId={this.state.heroImage.id}\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${this.state.heroImage.backdrop_path}`}\n              title={this.state.heroImage.original_title}\n            >\n              <SearchBar callback={this.searchItems} />\n            </HeroImage>\n          </div>\n        ) : null}\n        <div className=\"rmdb-home-grid\">\n          <FourColGrid\n            header={\n              <div className=\"rmdb-grid-header\">\n                <h1>\n                  {this.state.searchTerm ? \"Search Result\" : \"Popular Movies\"}\n                </h1>\n                <StarRating\n                  totalStars={5}\n                  selectStar={this.selectStar}\n                  starsSelected={this.state.rating / 2}\n                />\n              </div>\n            }\n            loading={this.state.loading}\n          >\n            {this.state.movies\n              .filter((movie) => movie.vote_average < this.state.rating - 1)\n              .map((element, i) => {\n                return (\n                  <MovieThumb\n                    key={i}\n                    clickable={true}\n                    image={\n                      element.poster_path\n                        ? `${IMAGE_BASE_URL}${POSTER_SIZE}/${element.poster_path}`\n                        : \"./images/no_image.jpg\"\n                    }\n                    movieId={element.id}\n                    movieName={element.original_title}\n                  />\n                );\n              })}\n          </FourColGrid>\n          {this.state.loading ? <Spinner /> : null}\n          {this.state.currentPage <= this.state.totalPages &&\n          !this.state.loading ? (\n            <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\n          ) : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Navigation.css\";\n\nconst Navigation = ({ movie }) => (\n  <div className=\"rmdb-navigation\">\n    <div className=\"rmdb-navigation-content\">\n      <Link to=\"/\">\n        <p>Home</p>\n      </Link>\n      <p>/</p>\n      <p>{movie}</p>\n    </div>\n  </div>\n);\n\nexport default Navigation;\n","import React from \"react\";\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../config\";\nimport MovieThumb from \"../MovieThumb\";\nimport \"./MovieInfo.css\";\n\nconst MovieInfo = ({ movie, directors }) => (\n  <div\n    className=\"rmdb-movieinfo\"\n    style={{\n      background: movie.backdrop_path\n        ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')`\n        : \"#000\",\n    }}\n  >\n    <div className=\"rmdb-movieinfo-content\">\n      <div className=\"rmdb-movieinfo-thumb\">\n        <MovieThumb\n          image={\n            movie.poster_path\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\n              : \"./images/no_image.jpg\"\n          }\n          clickable={false}\n        />\n      </div>\n      <div className=\"rmdb-movieinfo-text\">\n        <h1>{movie.title}</h1>\n        <h3>PLOT</h3>\n        <p>{movie.overview}</p>\n        <h3>IMDB RATING</h3>\n        <div className=\"rmdb-rating\">\n          <meter\n            min=\"0\"\n            max=\"100\"\n            optimum=\"100\"\n            low=\"40\"\n            high=\"70\"\n            value={movie.vote_average * 10}\n          />\n          <p className=\"rmdb-score\">{movie.vote_average}</p>\n        </div>\n        {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}{\" \"}\n        {directors.map((element, i) => {\n          return (\n            <p key={i} className=\"rmdb-director\">\n              {element.name}\n            </p>\n          );\n        })}\n        {movie.homepage && (\n          <a href={movie.homepage} className=\"homepage-link\">\n            More\n            <img\n              src=\"https://img.icons8.com/cute-clipart/64/000000/open-in-browser.png\"\n              \n              alt=\"More info\"\n            />\n          </a>\n        )}\n      </div>\n    </div>\n  </div>\n);\n\nexport default MovieInfo;\n","// Convert time to hours and minutes\nexport const calcTime = (time) => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to $ format\nexport const convertMoney = (money) => {\n  var formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n    minimumFractionDigits: 0,\n  });\n  return formatter.format(money);\n};\n","import React from \"react\";\n\nimport { calcTime, convertMoney } from \"./helpers\";\nimport \"./MovieInfoBar.css\";\n\nconst MovieInfoBar = ({ time, budget, revenue }) => (\n  <div className=\"rmdb-movieinfobar\">\n    <div className=\"rmdb-movieinfobar-content\">\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <img\n          src=\"https://img.icons8.com/officel/40/000000/time.png\"\n          alt=\"Running Time\"\n          className=\"icon-time\"\n        />\n        <span className=\"rmdb-movieinfobar-info\">\n          Running Time: {calcTime(time)}\n        </span>\n      </div>\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <img\n          src=\"https://img.icons8.com/ultraviolet/40/000000/cheap-2.png\"\n          alt=\"Budget\"\n          className=\"icon-budget\"\n        />\n        <span className=\"rmdb-movieinfobar-info\">\n          Budget: {convertMoney(budget)}\n        </span>\n      </div>\n      <div className=\"rmdb-movieinfobar-content-col\">\n        <img\n          src=\"https://img.icons8.com/ultraviolet/40/000000/refund-2.png\"\n          alt=\"Revenue\"\n          className=\"icon-revenue\"\n        />\n        <span className=\"rmdb-movieinfobar-info\">\n          Revenue: {convertMoney(revenue)}\n        </span>\n      </div>\n    </div>\n  </div>\n);\n\nexport default MovieInfoBar;\n","import React, { Component } from \"react\";\nimport { API_URL, API_KEY } from \"../../config\";\nimport Navigation from \"./Navigation\";\nimport MovieInfo from \"./MovieInfo\";\nimport MovieInfoBar from \"./MovieInfoBar\";\nimport Spinner from \"../Spinner\";\nimport \"./Movie.css\";\n\nclass Movie extends Component {\n  state = {\n    movie: null,\n    directors: [],\n    loading: false\n  };\n\n  componentDidMount() {\n    if (localStorage.getItem(`${this.props.match.params.movieId}`)) {\n      const state = JSON.parse(\n        localStorage.getItem(`${this.props.match.params.movieId}`)\n      );\n      this.setState({ ...state });\n    } else {\n      this.setState({ loading: true });\n      //first fetch the movie data and then actors\n      const endpoint = `${API_URL}movie/${\n        this.props.match.params.movieId\n      }?api_key=${API_KEY}&language=en-US`;\n      this.fetchMovieData(endpoint);\n    }\n  }\n\n  fetchMovieData = endpoint => {\n    fetch(endpoint)\n      .then(result => result.json())\n      .then(result => {\n        if (result.status_code) {\n          this.setState({ loading: false });\n        } else {\n          this.setState(\n            {\n              movie: result\n            },\n            () => {\n              const endpoint_credit = `${API_URL}movie/${\n                this.props.match.params.movieId\n              }/credits?api_key=${API_KEY}&language=en-US`;\n              fetch(endpoint_credit)\n                .then(result => result.json())\n                .then(result => {\n                  const directors = result.crew.filter(\n                    member => member.job === \"Director\"\n                  );\n                  this.setState(\n                    {\n                      directors,\n                      loading: false\n                    },\n                    () => {\n                      localStorage.setItem(\n                        `${this.props.match.params.movieId}`,\n                        JSON.stringify(this.state)\n                      );\n                    }\n                  );\n                });\n            }\n          );\n        }\n      })\n      .catch(error => console.error(\"Error: \", error));\n  };\n\n  render() {\n    return (\n      <div>\n        {this.state.movie ? (\n          <div>\n            <Navigation movie={this.state.movie.original_title} />\n            <MovieInfo\n              movie={this.state.movie}\n              directors={this.state.directors}\n            />\n            <MovieInfoBar\n              time={this.state.movie.runtime}\n              budget={this.state.movie.budget}\n              revenue={this.state.movie.revenue}\n            />\n          </div>\n        ) : null}\n        {this.state.loading ? <Spinner /> : null}\n      </div>\n    );\n  }\n}\n\nexport default Movie;","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1>Whooops. This page doesn't exist</h1>\n    </div>\n  );\n};\n\nexport default NotFound;","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport { Header, Discover, Movie, NotFound } from \"./View\";\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <React.Fragment>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" component={Discover} exact />\r\n        <Route path=\"/:movieId\" component={Movie} exact />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    filter: {},\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './app/index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './app/serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nserviceWorker.register();\r\n"],"sourceRoot":""}